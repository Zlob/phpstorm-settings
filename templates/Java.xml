<templateSet group="Java">
  <template name="Mapper" value="import java.io.IOException;&#10;import org.apache.hadoop.io.$TYPE_CLASS$;&#10;import org.apache.hadoop.mapreduce.Mapper;&#10;&#10;public class $CLASS_NAME$&#10;        extends Mapper&lt;$TYPE_CLASS$, $TYPE_CLASS$, $TYPE_CLASS$, $TYPE_CLASS$&gt; {&#10;&#10;    @Override&#10;    protected void map(LongWritable $KEY$, LongWritable $VALUE$, Context context)&#10;            throws IOException, InterruptedException {&#10;&#10;        $END$&#10;        context.write(new $TYPE_CLASS$(), new $TYPE_CLASS$());&#10;    }&#10;}&#10;" description="Mapper class" toReformat="false" toShortenFQNames="true">
    <variable name="TYPE_CLASS" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CLASS_NAME" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <variable name="KEY" expression="" defaultValue="&quot;key&quot;" alwaysStopAt="true" />
    <variable name="VALUE" expression="" defaultValue="&quot;value&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="Reducer" value="import java.io.IOException;&#10;import org.apache.hadoop.io.$TYPE_CLASS$;&#10;import org.apache.hadoop.mapreduce.Reducer;&#10;&#10;public class $CLASS_NAME$&#10;        extends Reducer&lt;$TYPE_CLASS$, $TYPE_CLASS$, $TYPE_CLASS$, $TYPE_CLASS$&gt; {&#10;&#10;    @Override&#10;    protected void reduce($TYPE_CLASS$ $KEY$, Iterable&lt;$TYPE_CLASS$&gt; $VALUES$,&#10;                          Context context) throws IOException, InterruptedException {&#10;&#10;        $END$&#10;        for ($TYPE_CLASS$ item : $VALUES$) {&#10;            &#10;        }&#10;&#10;        context.write(new $TYPE_CLASS$(), new $TYPE_CLASS$());&#10;    }&#10;}&#10;" description="Reducer class" toReformat="false" toShortenFQNames="true">
    <variable name="TYPE_CLASS" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CLASS_NAME" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <variable name="KEY" expression="" defaultValue="&quot;key&quot;" alwaysStopAt="true" />
    <variable name="VALUES" expression="" defaultValue="&quot;values&quot;" alwaysStopAt="true" />
    <context />
  </template>
</templateSet>